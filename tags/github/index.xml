<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>GitHub on Charlie&#39;s Blog</title>
        <link>https://charlieUWUuwu.github.io/tags/github/</link>
        <description>Recent content in GitHub on Charlie&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Charlie</copyright>
        <lastBuildDate>Mon, 03 Jun 2024 21:46:25 +0800</lastBuildDate><atom:link href="https://charlieUWUuwu.github.io/tags/github/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Github 基礎指令</title>
        <link>https://charlieUWUuwu.github.io/p/github-%E5%9F%BA%E7%A4%8E%E6%8C%87%E4%BB%A4/</link>
        <pubDate>Mon, 03 Jun 2024 21:46:25 +0800</pubDate>
        
        <guid>https://charlieUWUuwu.github.io/p/github-%E5%9F%BA%E7%A4%8E%E6%8C%87%E4%BB%A4/</guid>
        <description>&lt;h1 id=&#34;github-基礎指令&#34;&gt;
    &lt;a href=&#34;#github-%e5%9f%ba%e7%a4%8e%e6%8c%87%e4%bb%a4&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Github 基礎指令
&lt;/h1&gt;&lt;h2 id=&#34;下載-git&#34;&gt;
    &lt;a href=&#34;#%e4%b8%8b%e8%bc%89-git&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    下載 git
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 確認有安裝 git&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git --version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ./專案所在資料夾
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;初次使用-使用者設定&#34;&gt;
    &lt;a href=&#34;#%e5%88%9d%e6%ac%a1%e4%bd%bf%e7%94%a8-%e4%bd%bf%e7%94%a8%e8%80%85%e8%a8%ad%e5%ae%9a&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    初次使用 使用者設定
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git config --global user.name &amp;#34;Eddie Kao&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git config --global user.email &amp;#34;eddie@5xruby.tw&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看使用者訊息&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git config --list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;user.name=charlie
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;user.email=123gogo@gmail.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;git-使用&#34;&gt;
    &lt;a href=&#34;#git-%e4%bd%bf%e7%94%a8&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Git 使用
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;初始 Repository&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git init
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;觀察 Repository 檔案追蹤狀況&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;將檔案加入暫存區(Staging Area)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;# 添加一份檔案
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;#$ git add welcome.html
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;# 添加所有檔案
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;# 再次檢查
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看暫存區資料&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git ls-files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;git add 反悔 (清除暫存區檔案)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git reset HEAD -- &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;路徑&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;將暫存區(Staging Area)檔案提交到倉庫(Repository)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;提交訊息紀錄&amp;#34;&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;# -m 表示直接在命令行中提供提交訊息，後面的 &amp;#34;init commit&amp;#34; 是具體的提交訊息內容。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;commit 反悔&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git rm -r --cached &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;路徑&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;分支-branch&#34;&gt;
    &lt;a href=&#34;#%e5%88%86%e6%94%af-branch&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    分支 branch
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;印出目前這個專案有哪些分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新增+切換分支&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;法 1
&lt;ul&gt;
&lt;li&gt;新增分支
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch &amp;lt;分支名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 執行結束過後，目前還是會在 master 的主要分支上。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;切換分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout cat
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;Switched to branch &lt;span class=&#34;s1&#34;&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 切換分支，若不存在分支就創建一個&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout -b sister
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;Switched to a new branch &lt;span class=&#34;s1&#34;&gt;&amp;#39;sister&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;法 2
&lt;ul&gt;
&lt;li&gt;新建分支並切換過去&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout -b &amp;lt;分支名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分支改名字&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch -m cat tiger  &lt;span class=&#34;c1&#34;&gt;# cat -&amp;gt; tiger&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;合併分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 切回主要分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;Switched to branch &lt;span class=&#34;s1&#34;&gt;&amp;#39;master&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 將分支 cat 合併到 master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git merge cat
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;✨: 合併過的分支不會消失，要不要留著取決於自己~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;刪除分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch -d cat
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;github-使用&#34;&gt;
    &lt;a href=&#34;#github-%e4%bd%bf%e7%94%a8&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    GitHub 使用
&lt;/h2&gt;&lt;h3 id=&#34;開始前可以先檢測目前與-github-的-ssh-連線狀況&#34;&gt;
    &lt;a href=&#34;#%e9%96%8b%e5%a7%8b%e5%89%8d%e5%8f%af%e4%bb%a5%e5%85%88%e6%aa%a2%e6%b8%ac%e7%9b%ae%e5%89%8d%e8%88%87-github-%e7%9a%84-ssh-%e9%80%a3%e7%b7%9a%e7%8b%80%e6%b3%81&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    開始前，可以先檢測目前與 Github 的 SSH 連線狀況
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh -T git@github.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果沒有設定過 SSH 連線，則會返回 Permission denied 的錯誤訊息，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:git@github.com&#34; &gt;git@github.com&lt;/a&gt;: Permission denied (publickey).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;git-設定-ssh-連線&#34;&gt;
    &lt;a href=&#34;#git-%e8%a8%ad%e5%ae%9a-ssh-%e9%80%a3%e7%b7%9a&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Git 設定 SSH 連線
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;產生金鑰&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh-keygen -t rsa -b &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; -C &lt;span class=&#34;s2&#34;&gt;&amp;#34;你的E-mail&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 也可直接打&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;ssh-keygen
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;div class=&#34;post-img-view&#34;&gt;
        &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://hackmd.io/_uploads/rkJAWIz7a.png&#34;&gt;
            &lt;img src=&#34;https://hackmd.io/_uploads/rkJAWIz7a.png&#34; loading=&#34;lazy&#34; alt=&#34;image.png&#34;  /&gt;
        &lt;/a&gt;
    &lt;/div&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;進入金鑰資料夾查看&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; /c/Users/&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;userName&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;/.ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 通常會有  id_rsa、id_rsa.pub 兩個檔案&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;到 GitHub 設置鑰匙&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;開啟GitHub，登入後點頭像的 Settings&lt;/li&gt;
&lt;li&gt;點擊左邊 Access 的 SSH keys and GPG keys&lt;/li&gt;
&lt;li&gt;點選 New SSH key&lt;/li&gt;
&lt;li&gt;回到 git 畫面，輸入指令查看id_rsa.pub裡面的資料，並將顯示的資料填回 github 的key欄位。其中 Title 的部分可寫可不寫&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$  cat id_rsa.pub
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查看 ssh 連線是否成功，中間要輸入密碼&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ ssh -T git@github.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;阻止特定檔案被-push-到-github-上&#34;&gt;
    &lt;a href=&#34;#%e9%98%bb%e6%ad%a2%e7%89%b9%e5%ae%9a%e6%aa%94%e6%a1%88%e8%a2%ab-push-%e5%88%b0-github-%e4%b8%8a&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    阻止特定檔案被 push 到 GitHub 上
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;新增 &lt;code&gt;.gitignore&lt;/code&gt; 檔案&lt;/li&gt;
&lt;li&gt;內容放要被忽略的檔案類型
例如，想要忽略所有 .log 檔案、&lt;code&gt;/model&lt;/code&gt; 資料夾&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;*.log
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;/model
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;重新提交到暫存區&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 清除本機 Git 的快取，就是將所有檔案移除 Git 的追蹤，但沒有刪除檔案&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git rm -r --cached .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 重新加入 Git 追蹤，這時就會重新套入 .gitignore 設定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 重新 commit ，並會忽略設定在 .gitignore 的檔案&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;update .gitignore&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;push-到-github-上&#34;&gt;
    &lt;a href=&#34;#push-%e5%88%b0-github-%e4%b8%8a&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Push 到 GitHub 上
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;進入 GitHub 建立新的 repository&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;說明：
&lt;ul&gt;
&lt;li&gt;如果是全新開始，請依「create a new repository on the command line」的內容指示進行；如果是要上傳現存專案，則依照「push an existing repository from the command line」選項進行。&lt;/li&gt;
&lt;li&gt;可以看到在 Quick start 那邊有 HTTPS 跟 SSH 兩個，若用 HTTPS 的話在登入時會需要輸入帳號密碼，而使用 SSH 的話則需要使用密鑰來登入，以下介紹 SSH 的使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;獲取 ssh 連線地址
進入 Repository 點擊
&lt;div class=&#34;post-img-view&#34;&gt;
        &lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://hackmd.io/_uploads/HJf6EUfXp.png&#34;&gt;
            &lt;img src=&#34;https://hackmd.io/_uploads/HJf6EUfXp.png&#34; loading=&#34;lazy&#34; alt=&#34;image.png&#34;  /&gt;
        &lt;/a&gt;
    &lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;設定遠端節點&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git remote add origin &amp;lt;ssh 連線地址&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;- 說明：
1. git remote 指令，顧名思義，主要是跟遠端有關的操作。
2. add 指令是指要加入一個遠端的節點。
3. 在這裡的 origin 是一個「代名詞」，指的是後面那串 GitHub 伺服器的位置。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;查詢遠端節點&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git remote -v
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 出現以下&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;origin  git@github.com:charlieUWUuwu/practice-git2.git &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;fetch&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;origin  git@github.com:charlieUWUuwu/practice-git2.git &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;push&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查詢遠端節點分支&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git branch -r
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;更改遠端節點的位置
&lt;blockquote&gt;
&lt;p&gt;✨: 若傳案起初是從別人那邊 clone 過來的，記得執行這邊，將 url 改到自己的倉庫&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git remote set-url origin &amp;lt;新網址&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;刪除遠端節點&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# $ git remote rm origin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git remote rm &amp;lt;遠端節點名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;資料推到github上&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#$ git push -u origin master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git push -u &amp;lt;遠端節點名&amp;gt; &amp;lt;branch名&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;✨: 檔案不能超過 100M，否則後續 push 會一直失敗&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解決辦法 : &lt;a class=&#34;link&#34; href=&#34;https://www.twblogs.net/a/5ca39948bd9eee5b1a06eede&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.twblogs.net/a/5ca39948bd9eee5b1a06eede&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;注意! Windows 系統要用 &amp;quot; 而不是 &amp;lsquo;，否則會出現 rm 錯誤啥的&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;從-github-上-pull-下來&#34;&gt;
    &lt;a href=&#34;#%e5%be%9e-github-%e4%b8%8a-pull-%e4%b8%8b%e4%be%86&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    從 GitHub 上 Pull 下來
&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;✨: 以下是建立在【自己已經有這個專案】的前提下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;跟 Push 指令相反，Pull 指令是拉回本機更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pull 下載更新
git pull = git fetch + git merge
上線抓東西下來（Fetch），並且更新本機的進度（Merge）。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git pull
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;clone--第一次使用專案時抓取遠端檔案&#34;&gt;
    &lt;a href=&#34;#clone--%e7%ac%ac%e4%b8%80%e6%ac%a1%e4%bd%bf%e7%94%a8%e5%b0%88%e6%a1%88%e6%99%82%e6%8a%93%e5%8f%96%e9%81%a0%e7%ab%af%e6%aa%94%e6%a1%88&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Clone : 第一次使用專案時，抓取遠端檔案
&lt;/h3&gt;&lt;p&gt;Clone 指令會把整個專案的內容複製一份到你的電腦裡，這裡指的「內容」不是只有檔案，而是指所有整個專案的歷史紀錄、分支、標籤等內容都會複製一份下來。&lt;/p&gt;
&lt;p&gt;:bulb: 以下使用 [SSH] 的連結&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone git@github.com:kaochenlong/dummy-git.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 若要 Clone 下來之後存成不同的目錄名稱&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git clone git@github.com:kaochenlong/dummy-git.git hello_kitty
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;pull-requestpr-與其它開發者的互動&#34;&gt;
    &lt;a href=&#34;#pull-requestpr-%e8%88%87%e5%85%b6%e5%ae%83%e9%96%8b%e7%99%bc%e8%80%85%e7%9a%84%e4%ba%92%e5%8b%95&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Pull Request（PR）: 與其它開發者的互動
&lt;/h3&gt;&lt;p&gt;在 GitHub 專案畫面上有Fork跟Pull Request按鈕可以按
Fork : 複製別人的專案到自己帳號底下
Pull Request : 修改完東西後，發通知給原作者問他要不要 pull 你的專案(還記得pull裡面有merge的功能嗎，如果原作者pull你就表示他要跟你的合併)&lt;/p&gt;
&lt;p&gt;也建議看一下這個 &lt;a class=&#34;link&#34; href=&#34;https://june.monster/git-github-work-with-github/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git + GitHub 版本控制教學 (5) - 使用 GitHub 與團隊合作&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;和朋朋協作專案&#34;&gt;
    &lt;a href=&#34;#%e5%92%8c%e6%9c%8b%e6%9c%8b%e5%8d%94%e4%bd%9c%e5%b0%88%e6%a1%88&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    和朋朋協作專案
&lt;/h2&gt;&lt;p&gt;借用一下之前和同學比賽的內容&lt;/p&gt;
&lt;h3 id=&#34;how-to-maintain-a-repo&#34;&gt;
    &lt;a href=&#34;#how-to-maintain-a-repo&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    How to maintain a repo
&lt;/h3&gt;&lt;p&gt;每次增修內容前請依循下列流程進行：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pull origin/develop 最新版本
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git pull origin develop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 local 新增 branch 並切換
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout -b &amp;lt;NEW_BRANCH_NAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;編輯完成後進行 commit
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;COMMIT_MSG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;回到 develop 再次獲取 origin/develop 的最新版本、與自己的修正合併並修正出現的 conflict
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout develop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git pull
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout &amp;lt;NEW_BRANCH_NAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git rebase develop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;將新 branch 的修正與 develop 合併並 push 到 Github
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git checkout develop
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git merge &amp;lt;NEW_BRANCH_NAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;$ git push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;contributing-guidelines&#34;&gt;
    &lt;a href=&#34;#contributing-guidelines&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Contributing Guidelines
&lt;/h3&gt;&lt;p&gt;以下講解 branch 命名，以及撰寫 commit 的一種規則。
後也可以先看 &lt;a class=&#34;link&#34; href=&#34;https://hackmd.io/@CynthiaChuang/Git-Commit-Message-Style&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;git commit 都怎麼寫的&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;git-branch-naming&#34;&gt;
    &lt;a href=&#34;#git-branch-naming&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Git Branch Naming
&lt;/h4&gt;&lt;p&gt;Except for permanent branches (e.g. &lt;code&gt;main&lt;/code&gt; and &lt;code&gt;develop&lt;/code&gt;), all temporary branches should be named in the format &lt;code&gt;&amp;lt;TYPE&amp;gt;/&amp;lt;ISSUE&amp;gt;-&amp;lt;DETAIL&amp;gt;&lt;/code&gt; such as &lt;code&gt;feat/1-integer-datatype&lt;/code&gt;. If the goal of a branch has not related to any issues, you can either create an issue to describe the detail of your planning or skip the &lt;code&gt;&amp;lt;ISSUE&amp;gt;-&lt;/code&gt; in the branch name. With this convention, we can understand the purpose of each branch from its name directly.&lt;/p&gt;
&lt;p&gt;There are several catagories that are available for &lt;code&gt;&amp;lt;TYPE&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bug&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-commit-message-convention&#34;&gt;
    &lt;a href=&#34;#git-commit-message-convention&#34; class=&#34;header-anchor&#34;&gt;#&lt;/a&gt;
    Git Commit Message Convention
&lt;/h4&gt;&lt;p&gt;There are some common commit types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;feat&lt;/code&gt;: A new feature.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fix&lt;/code&gt;: A bug to be fixed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;style&lt;/code&gt;: Changes about coding style without changing the behavior.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BREAKING CHANGE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perf&lt;/code&gt;: Improve the performance of a functionality.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refactor&lt;/code&gt;: Restructure the implementation of a functionality without changing its behavior.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;revert&lt;/code&gt;: Revert a previous commit without other changes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chore&lt;/code&gt;: Changes about build tools or project configurations.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;test&lt;/code&gt;: Add or correct tests.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: Update documentations only.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;update&lt;/code&gt;: update document (not code)、 db、 json、 md&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
